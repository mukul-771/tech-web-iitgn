#!/usr/bin/env node

/**
 * Production Deployment Verification Script
 * Run this after Vercel deployment to verify team migration
 */

async function verifyProductionDeployment() {
  // Get the domain from command line args or use default
  const domain = process.argv[2] || 'https://your-tech-website.vercel.app';
  
  console.log('üîç PRODUCTION DEPLOYMENT VERIFICATION');
  console.log('=====================================');
  console.log(`üåê Testing domain: ${domain}\n`);

  let allTestsPassed = true;

  // Test 1: Health Check
  try {
    console.log('1Ô∏è‚É£ Health check...');
    const response = await fetch(`${domain}/api/health`);
    if (response.ok) {
      console.log('   ‚úÖ Site is accessible');
    } else {
      console.log('   ‚ö†Ô∏è  Site returned non-200 status');
    }
  } catch (error) {
    console.log(`   ‚ùå Site not accessible: ${error.message}`);
    allTestsPassed = false;
  }

  // Test 2: Team API
  try {
    console.log('\n2Ô∏è‚É£ Testing team API...');
    const response = await fetch(`${domain}/api/team`);
    const data = await response.json();
    
    if (response.ok && Array.isArray(data)) {
      console.log(`   ‚úÖ Team API working: ${data.length} members retrieved`);
      if (data.length === 23) {
        console.log('   ‚úÖ Expected team count (23) confirmed');
      } else {
        console.log(`   ‚ö†Ô∏è  Unexpected team count: ${data.length} (expected 23)`);
      }
    } else {
      console.log(`   ‚ùå Team API failed: ${response.status}`);
      allTestsPassed = false;
    }
  } catch (error) {
    console.log(`   ‚ùå Team API error: ${error.message}`);
    allTestsPassed = false;
  }

  // Test 3: Leadership API
  try {
    console.log('\n3Ô∏è‚É£ Testing leadership API...');
    const response = await fetch(`${domain}/api/team/leadership`);
    const data = await response.json();
    
    if (response.ok && Array.isArray(data)) {
      console.log(`   ‚úÖ Leadership API working: ${data.length} members`);
      if (data.length === 6) {
        console.log('   ‚úÖ Expected leadership count (6) confirmed');
      } else {
        console.log(`   ‚ö†Ô∏è  Unexpected leadership count: ${data.length} (expected 6)`);
      }
    } else {
      console.log(`   ‚ùå Leadership API failed: ${response.status}`);
      allTestsPassed = false;
    }
  } catch (error) {
    console.log(`   ‚ùå Leadership API error: ${error.message}`);
    allTestsPassed = false;
  }

  // Test 4: Migration API Status
  try {
    console.log('\n4Ô∏è‚É£ Checking migration API...');
    const response = await fetch(`${domain}/api/migrate/team`, { method: 'POST' });
    const data = await response.json();
    
    if (response.ok) {
      if (data.success) {
        console.log('   ‚úÖ Migration API functional');
        console.log(`   üìä Database has ${data.summary?.totalInDatabase || 'unknown'} members`);
      } else {
        console.log('   ‚ö†Ô∏è  Migration API returned error (may be expected if already migrated)');
      }
    } else {
      console.log(`   ‚ö†Ô∏è  Migration API returned ${response.status} status`);
    }
  } catch (error) {
    console.log(`   ‚ö†Ô∏è  Migration API test failed: ${error.message}`);
  }

  // Test 5: About Page
  try {
    console.log('\n5Ô∏è‚É£ Testing About page...');
    const response = await fetch(`${domain}/about`);
    
    if (response.ok) {
      console.log('   ‚úÖ About page accessible');
    } else {
      console.log(`   ‚ùå About page returned ${response.status}`);
      allTestsPassed = false;
    }
  } catch (error) {
    console.log(`   ‚ùå About page error: ${error.message}`);
    allTestsPassed = false;
  }

  // Summary
  console.log('\nüèÅ PRODUCTION VERIFICATION SUMMARY');
  console.log('===================================');
  if (allTestsPassed) {
    console.log('üéâ DEPLOYMENT SUCCESSFUL!');
    console.log('\n‚úÖ All critical systems operational:');
    console.log('   ‚Ä¢ Team data served from Neon database');
    console.log('   ‚Ä¢ All API endpoints functional');
    console.log('   ‚Ä¢ Frontend pages accessible');
    console.log('   ‚Ä¢ Migration system ready');
  } else {
    console.log('‚ùå DEPLOYMENT ISSUES DETECTED');
    console.log('\nüîß Recommended actions:');
    console.log('   ‚Ä¢ Check Vercel environment variables');
    console.log('   ‚Ä¢ Verify DATABASE_URL is set correctly');
    console.log('   ‚Ä¢ Check function logs in Vercel dashboard');
    console.log('   ‚Ä¢ Run migration API if team data is missing');
  }

  console.log(`\nüîó Test your deployment: ${domain}`);
}

// Show usage if no domain provided
if (process.argv.length < 3) {
  console.log('Usage: node verify-production.js <your-domain>');
  console.log('Example: node verify-production.js https://tech-iitgn.vercel.app');
  console.log('\nRunning with placeholder domain...\n');
}

verifyProductionDeployment().catch(console.error);
